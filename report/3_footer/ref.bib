@article{chitnis_parameterized_2014,
	title = {Parameterized Streaming Algorithms for Vertex Cover},
	url = {http://arxiv.org/abs/1405.0093},
	abstract = {As graphs continue to grow in size, we seek ways to effectively process such data at scale. The model of streaming graph processing, in which a compact summary is maintained as each edge insertion/deletion is observed, is an attractive one. However, few results are known for optimization problems over such dynamic graph streams. In this paper, we introduce a new approach to handling graph streams, by instead seeking solutions for the parameterized versions of these problems where we are given a parameter \$k\$ and the objective is to decide whether there is a solution bounded by \$k\$. By combining kernelization techniques with randomized sketch structures, we obtain the first streaming algorithms for the parameterized versions of the Vertex Cover problem. We consider the following three models for a graph stream on \$n\$ nodes: 1. The insertion-only model where the edges can only be added. 2. The dynamic model where edges can be both inserted and deleted. 3. The {\textbackslash}emph\{promised\} dynamic model where we are guaranteed that at each timestamp there is a solution of size at most \$k\$. In each of these three models we are able to design parameterized streaming algorithms for the Vertex Cover problem. We are also able to show matching lower bound for the space complexity of our algorithms. (Due to the {arXiv} limit of 1920 characters for abstract field, please see the abstract in the paper for detailed description of our results)},
	journaltitle = {{arXiv}:1405.0093 [cs]},
	author = {Chitnis, Rajesh and Cormode, Graham and Hajiaghayi, {MohammadTaghi} and Monemizadeh, Morteza},
	urldate = {2019-10-21},
	date = {2014-05-01},
	eprinttype = {arxiv},
	eprint = {1405.0093},
	keywords = {Computer Science - Data Structures and Algorithms},
	file = {arXiv\:1405.0093 PDF:C\:\\Users\\Adam\\Zotero\\storage\\3EDZW8DR\\Chitnis et al. - 2014 - Parameterized Streaming Algorithms for Vertex Cove.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\Adam\\Zotero\\storage\\Z96PKEX3\\1405.html:text/html}
}


@article{chitnis_kernelization_2015,
	title = {Kernelization via Sampling with Applications to Dynamic Graph Streams},
	url = {http://arxiv.org/abs/1505.01731},
	abstract = {In this paper we present a simple but powerful subgraph sampling primitive that is applicable in a variety of computational models including dynamic graph streams (where the input graph is defined by a sequence of edge/hyperedge insertions and deletions) and distributed systems such as {MapReduce}. In the case of dynamic graph streams, we use this primitive to prove the following results: -- Matching: First, there exists an \${\textbackslash}tilde\{O\}(k{\textasciicircum}2)\$ space algorithm that returns an exact maximum matching on the assumption the cardinality is at most \$k\$. The best previous algorithm used \${\textbackslash}tilde\{O\}(kn)\$ space where \$n\$ is the number of vertices in the graph and we prove our result is optimal up to logarithmic factors. Our algorithm has \${\textbackslash}tilde\{O\}(1)\$ update time. Second, there exists an \${\textbackslash}tilde\{O\}(n{\textasciicircum}2/{\textbackslash}alpha{\textasciicircum}3)\$ space algorithm that returns an \${\textbackslash}alpha\$-approximation for matchings of arbitrary size. (Assadi et al. (2015) showed that this was optimal and independently and concurrently established the same upper bound.) We generalize both results for weighted matching. Third, there exists an \${\textbackslash}tilde\{O\}(n{\textasciicircum}\{4/5\})\$ space algorithm that returns a constant approximation in graphs with bounded arboricity. -- Vertex Cover and Hitting Set: There exists an \${\textbackslash}tilde\{O\}(k{\textasciicircum}d)\$ space algorithm that solves the minimum hitting set problem where \$d\$ is the cardinality of the input sets and \$k\$ is an upper bound on the size of the minimum hitting set. We prove this is optimal up to logarithmic factors. Our algorithm has \${\textbackslash}tilde\{O\}(1)\$ update time. The case \$d=2\$ corresponds to minimum vertex cover. Finally, we consider a larger family of parameterized problems (including \$b\$-matching, disjoint paths, vertex coloring among others) for which our subgraph sampling primitive yields fast, small-space dynamic graph stream algorithms. We then show lower bounds for natural problems outside this family.},
	journaltitle = {{arXiv}:1505.01731 [cs]},
	author = {Chitnis, Rajesh and Cormode, Graham and Esfandiari, Hossein and Hajiaghayi, {MohammadTaghi} and {McGregor}, Andrew and Monemizadeh, Morteza and Vorotnikova, Sofya},
	urldate = {2019-10-31},
	date = {2015-05-07},
	eprinttype = {arxiv},
	eprint = {1505.01731},
	keywords = {Computer Science - Data Structures and Algorithms},
	file = {arXiv Fulltext PDF:C\:\\Users\\Adam\\Zotero\\storage\\VFBNMXQ4\\Chitnis et al. - 2015 - Kernelization via Sampling with Applications to Dy.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\Adam\\Zotero\\storage\\6HPWRJPP\\1505.html:text/html}
}